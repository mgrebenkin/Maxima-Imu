/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: input   start ] */
load(vect);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
load(numericalio);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M(ax, ang):= matrix(
[cos(ang) + (1 - cos(ang))*ax[1]**2,  (1 - cos(ang))*ax[1]*ax[2] - sin(ang)*ax[3], (1 - cos(ang))*ax[1]*ax[3] + sin(ang)*ax[2]],
[(1 - cos(ang))*ax[2]*ax[1] + sin(ang)*ax[3], cos(ang) + (1 - cos(ang))*ax[2]**2, (1 - cos(ang))*ax[2]*ax[3] - sin(ang)*ax[1]],
[(1 - cos(ang))*ax[3]*ax[1] - sin(ang)*ax[2], (1 - cos(ang))*ax[3]*ax[2] + sin(ang)*ax[1], cos(ang) + (1 - cos(ang))*ax[3]**2]
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
PartDeriv(A):= (D:matrix([],[],[]),

D:addcol(D, diff(A, AngX)),
D:addcol(D, diff(A, AngZ)),
D:addcol(D, diff(A, Theta1)),
D:addcol(D, diff(A, Psi1)),
D:addcol(D, diff(A, Nu1)),
D:addcol(D, diff(A, Nu2)),
D:addcol(D, diff(A, Theta3)),
D:addcol(D, diff(A, Psi3)),
D:addcol(D, diff(A, K1)),
D:addcol(D, diff(A, K2)),
D:addcol(D, diff(A, K3)),
D:addcol(D, diff(A, Shift1)),
D:addcol(D, diff(A, Shift2)),
D:addcol(D, diff(A, Shift3)),
D);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
M30:matrix(
[sqrt(1 - (sin(AngX)^2/cos(AngZ)^2)), sin(AngX), sin(AngX)*tan(AngZ)],
[-sin(AngX)*sin(AngZ)*tan(AngZ) - sin(AngX)*cos(AngZ), 
    sqrt(1 - (sin(AngX )^2/cos(AngZ)^2))*cos(AngZ), 
    sqrt(1 - (sin(AngX )^2/cos(AngZ)^2))*sin(AngZ)],
[0, -sin(AngZ), cos(AngZ)]
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E1: [
sqrt(1 - (sin(Theta1))^2)*sqrt(1 - (sin(Psi1))^2),
sin(Theta1),
-sqrt(1 - (sin(Theta1) )^2)*(sin(Psi1))
];

E2: [sin(Nu1), sqrt(1 - sin(Nu1)^2 - sin(Nu2)^2), -sin(Nu2)];

E3: [
sqrt(1 - (sin(Theta3) )^2)*(cos(Psi3)),
sin(Theta3) ,
sqrt(1 - (cos(Psi3))^2)*sqrt(1 - (sin(Theta3) )^2)
];

E:matrix(E1, E2, E3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
K:matrix(
[K1, 0, 0],
[0, K2, 0],
[0, 0, K3]
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
A0: matrix([Shift1],[Shift2], [Shift3]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
_LAT: float((55 + 38/60 + 45/3600)*%pi/180);
_LAMBDA: [cos(_LAT), sin(_LAT), 0];
_G:matrix([0], [-9.8149760962], [0]);
_EARTHROT: 7.292115003E-5;
_Tc: 3.2768;
_XDRIFT: (4.1177E-6)/(32*_Tc); _YDRIFT: (4.1177E-6)/(32*_Tc); _ZDRIFT: (4.1177E-6)/(32*_Tc);
_DRIFT_VEL: sqrt((_XDRIFT)^2 + (_YDRIFT)^2 + (_ZDRIFT)^2);
_DRIFT_AX: [_XDRIFT, _YDRIFT, _ZDRIFT]/_DRIFT_VEL;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*TEST!!!*/
_DRIFT_VEL: 0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Mrot1:read_matrix("MR1.csv", comma);
Mrot2:read_matrix("MR2.csv", comma);
Mrot3:read_matrix("MR3.csv", comma);
Mrot4:read_matrix("MR4.csv", comma);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
val:[
Theta1 = 0.5*float(%pi)/180, Psi1 = 0,
Theta3 = 0.5*float(%pi)/180, Psi3 = -float(%pi)/2,
Nu1 = 0, Nu2 = 0,
AngX = 0, AngZ = 0,
K1 = 1, K2 = 1, K3 = 1,
Shift1 = 0, Shift2 = 0, Shift3 = 0
];
err:[
Theta1 = (0.5 - 30/3600)*float(%pi)/180, Psi1 = -(30/3600)*float(%pi)/180,
Theta3 = (0.5 - 30/3600)*float(%pi)/180, Psi3 = (-float(%pi)/2) - ((30/3600)*float(%pi)/180),
Nu1 = (30/3600)*float(%pi)/180, Nu2 = (30/3600)*float(%pi)/180,
AngX = float((25/3600)*%pi/180), AngZ = float((25/3600)*%pi/180),
K1 = 1, K2 = 1, K3 = 1,
Shift1 = 0, Shift2 = 0, Shift3 = 0
];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* I */
A1:expand(A0 + K.E.M30.(-_G))$
D1:PartDeriv(A1)$
outG1: subst(val, A1)$
Dnum1: subst(val, D1)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* II */
A2:expand(A0 + K.E.(M(_DRIFT_AX, _DRIFT_VEL*_Tc*273).M30).(M(_LAMBDA, _EARTHROT*_Tc*273).(-_G)))$
D2:PartDeriv(A2)$
outG2: subst(val, A2)$
Dnum2: subst(val, D2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* III */
A3:expand(A0 + K.E.(Mrot1.M(_DRIFT_AX, _DRIFT_VEL*_Tc*546).M30).(M(_LAMBDA, _EARTHROT*_Tc*598).(-_G)))$
D3:PartDeriv(A3)$
outG3: subst(val, A3)$
Dnum3: subst(val, D3)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* IV */
A4:expand(A0 + K.E.(Mrot2.M(_DRIFT_AX, _DRIFT_VEL*_Tc*222)
.Mrot1.M(_DRIFT_AX, _DRIFT_VEL*_Tc*546).M30)
.(M(_LAMBDA, _EARTHROT*_Tc*863).(-_G)))$
D4:PartDeriv(A4)$
outG4: subst(val, A4)$
Dnum4: subst(val, D4)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* V */
A5:expand(A0 + K.E.(Mrot3.M(_DRIFT_AX, _DRIFT_VEL*_Tc*1)
.Mrot2.M(_DRIFT_AX, _DRIFT_VEL*_Tc*222)
.Mrot1.M(_DRIFT_AX, _DRIFT_VEL*_Tc*546).M30)
.(M(_LAMBDA, _EARTHROT*_Tc*953).(-_G)))$
D5:PartDeriv(A5)$
outG5: subst(val, A5)$
Dnum5: subst(val, D5)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* VI */
A6:expand(A0 + K.E.(Mrot4.M(_DRIFT_AX, _DRIFT_VEL*_Tc*189)
.Mrot3.M(_DRIFT_AX, _DRIFT_VEL*_Tc*1)
.Mrot2.M(_DRIFT_AX, _DRIFT_VEL*_Tc*222)
.Mrot1.M(_DRIFT_AX, _DRIFT_VEL*_Tc*546).M30)
.(M(_LAMBDA, _EARTHROT*_Tc*1184).(-_G)))$
D6:PartDeriv(A6)$
outG6: subst(val, A6)$
Dnum6: subst(val, D6)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
outG:addrow(outG1, outG2, outG3, outG4, outG5, outG6);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Dnum: addrow(Dnum1, Dnum2, Dnum3, Dnum4, Dnum5, Dnum6);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
write_data(outG, "outG.csv", comma);
write_data(Dnum, "Dnum.csv", comma);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
